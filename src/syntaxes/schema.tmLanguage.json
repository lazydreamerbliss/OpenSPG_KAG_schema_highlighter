{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "OpenSPG KAG Schema",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"name": "keyword.control.namespace.schema",
			"match": "\\b(namespace)\\b",
			"captures": {
				"1": {
					"name": "keyword.control.schema"
				}
			}
		},
		{
			"name": "keyword.type.schema",
			"match": "\\b(EntityType|ConceptType|EventType|Text|Float|Integer)\\b|\\bSTD\\.[a-zA-Z]+\\b",
			"captures": {
				"1": {
					"name": "keyword.control.type.schema"
				}
			}
		},
		{
			"name": "keyword.operator.arrow.schema",
			"match": "->",
			"captures": {
				"0": {
					"name": "keyword.operator.arrow.schema"
				}
			}
		},
		{
			"name": "keyword.control.declaration.schema",
			"match": "\\b(desc|constraint|value|properties|relations|rule|hypernymPredicate|autoRelate|spreadable|regular)\\b",
			"captures": {
				"1": {
					"name": "keyword.control.schema"
				}
			}
		},
		{
			"name": "keyword.control.constraint.schema",
			"match": "\\b(NotNull|MultiValue|Enum|Regular)\\b",
			"captures": {
				"1": {
					"name": "keyword.control.constraint.schema"
				}
			}
		},
		{
			"name": "entity.name.type.schema",
			"match": "^\\s*([A-Z][a-zA-Z0-9_]*)(\\s*\\()([^)]+)(\\))\\s*((:))\\s*(EntityType|ConceptType|EventType)",
			"captures": {
				"1": {
					"name": "entity.name.class.schema"
				},
				"2": {
					"name": "comment.parenthetical.brackets.schema"
				},
				"3": {
					"name": "comment.parenthetical.schema"
				},
				"4": {
					"name": "comment.parenthetical.brackets.schema"
				},
				"6": {
					"name": "keyword.operator.schema"
				},
				"7": {
					"name": "keyword.control.type.schema"
				}
			}
		},
		{
			"name": "keyword.control.section.schema",
			"match": "^\\s*(properties|relations)((:))",
			"captures": {
				"1": {
					"name": "keyword.control.section.schema"
				},
				"3": {
					"name": "keyword.operator.schema"
				}
			}
		},
		{
			"name": "meta.property-definition.schema",
			"match": "^\\s*([a-zA-Z_#][a-zA-Z0-9_#]*)(\\s*\\()([^)]+)(\\))\\s*((:))\\s*([A-Z][a-zA-Z0-9_]*)",
			"captures": {
				"1": {
					"name": "variable.parameter.schema"
				},
				"2": {
					"name": "comment.parenthetical.brackets.schema"
				},
				"3": {
					"name": "comment.parenthetical.schema"
				},
				"4": {
					"name": "comment.parenthetical.brackets.schema"
				},
				"6": {
					"name": "keyword.operator.schema"
				},
				"7": {
					"name": "entity.name.class.schema"
				}
			}
		},
		{
			"name": "meta.hypernymPredicate.schema",
			"match": "^\\s*(hypernymPredicate)(\\s*(:))\\s*([a-zA-Z_][a-zA-Z0-9_]*)",
			"captures": {
				"1": {
					"name": "entity.other.attribute-name.schema"
				},
				"3": {
					"name": "keyword.operator.schema"
				},
				"4": {
					"name": "entity.name.class.schema"
				}
			}
		},
		{
			"name": "meta.index.schema",
			"match": "^\\s*(index)((:))\\s*(TextAndVector|Text|Date)",
			"captures": {
				"1": {
					"name": "keyword.control.index.schema"
				},
				"2": {
					"name": "keyword.operator.schema"
				},
				"4": {
					"name": "entity.name.class.schema"
				}
			}
		},
		{
			"name": "keyword.control.rule.schema",
			"match": "^\\s*(rule)((:))\\s*",
			"captures": {
				"1": {
					"name": "keyword.control.rule.schema"
				},
				"2": {
					"name": "keyword.operator.schema"
				}
			}
		},
		{
			"name": "meta.type-declaration-arrow.schema",
			"match": "^\\s*([A-Z][a-zA-Z0-9_]*)(\\s*\\()([^)]+)(\\))\\s*(->)\\s*(EntityType|ConceptType|EventType)",
			"captures": {
				"1": {
					"name": "entity.name.class.schema"
				},
				"2": {
					"name": "comment.parenthetical.brackets.schema"
				},
				"3": {
					"name": "comment.parenthetical.schema"
				},
				"4": {
					"name": "comment.parenthetical.brackets.schema"
				},
				"5": {
					"name": "keyword.operator.arrow.schema"
				},
				"6": {
					"name": "keyword.control.type.schema"
				}
			}
		}
	],
	"repository": {
		"comments": {
			"name": "comment.line.schema",
			"begin": "//",
			"end": "$"
		}
	},
	"scopeName": "source.schema"
}